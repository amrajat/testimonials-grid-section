/* IMPORT GOOGLE FONTS */
@import url("https://fonts.googleapis.com/css2?family=Barlow+Semi+Condensed:wght@500;600&display=swap");
:root {
  --color-primary-purple: hsl(263, 55%, 52%);
  --color-primary-light-gray-500: hsl(217, 19%, 35%);
  --color-primary-blue: hsl(219, 29%, 14%);
  --color-primary-white: hsl(0, 0%, 100%);

  --color-neutral-light-gray-300: hsl(0, 0%, 81%);
  --color-neutral-light-gray-200: hsl(210, 46%, 95%);

  --font-size-default: 0.8125rem;
  --font-primary: "Barlow Semi Condensed", sans-serif;
}

/* 
STOP ANIMATION/MOTION IF USER PREFERS
REDUCED MOTION/ANIMATION IN BROWSER.
*/
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-delay: -1ms !important;
    animation-duration: 1ms !important;
    animation-iteration-count: 1 !important;
    background-attachment: inherit !important;
    scroll-behavior: auto !important;
    transition-duration: 0s !important;
    transition-delay: 0s !important;
  }
}

/* 
GLOBAL RESET BY JOSH W. COMAEU
*/

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}
/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

/* ONLY SCREEN READER TEXT, NOT SHOWN IN BROWSERS */

.sr-only {
  position: absolute !important; /* Outside the DOM flow */
  height: 1px;
  width: 1px; /* Nearly collapsed */
  overflow: hidden;
  clip: rect(1px 1px 1px 1px); /* IE 7+ only support clip without commas */
  clip: rect(1px, 1px, 1px, 1px); /* All other browsers */
}

/* 
STYLE
*/

body {
  display: grid;
  place-items: center;
  overflow-x: hidden;

  font: 400 var(--font-size-default) var(--font-primary);
  color: var(--color-neutral-light-gray-200);
  background-color: var(--color-primary-blue);
}
.container {
  max-width: 75rem;
  margin: auto 1rem;
  display: grid;
  grid-template-columns: repeat(4, [col-start] 1fr [col-end]);
  grid-template-rows: repeat(3, [row-start] min-content [row-end]);
  gap: 1rem;
}

.card {
  padding: 1.5rem;
  position: relative;
  border-radius: 1rem;

  display: flex;
  flex-direction: column;
  gap: 1rem;

  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0);
  background-color: var(--color-primary-white);
  transition: all 0.2s ease;
}

.card:hover {
  filter: saturate(1.5);
}

.card-1 {
  position: relative;
  grid-column: col-start 1 / col-end 2;
  z-index: 1;
  overflow: hidden;

  background: linear-gradient(
    -45deg,
    var(--color-primary-purple),
    var(--color-primary-blue),
    rgb(134, 31, 98),
    rgb(95, 174, 230),
    rgb(15, 97, 15)
  );
  background-size: 400% 400%;
  animation: gradient 15s ease infinite, animate-to-right 1.5s ease backwards;
}

.card-2 {
  grid-column: col-start 2 / col-end 3;
}

.card-3 {
  grid-column: col-start 3 / col-end 3;
  grid-row: row-start 1;
}

.card-4 {
  grid-column: col-start 1 / col-end 1;
  grid-row: row-start 2;
}

.card-5 {
  grid-row: row-start 1 / row-end 2;
  grid-column: col-start 4 / col-end 4;

  animation: animate-to-bottom 1.5s ease backwards;
}

.attribution {
  grid-column: col-start 1 / col-end 4;
  align-items: center;

  padding: 1.5rem;
  position: relative;
  border-radius: 1rem;

  display: flex;
  justify-content: center;
  gap: 2rem;
  align-items: center;

  background: linear-gradient(
    -45deg,
    var(--color-primary-purple),
    var(--color-primary-blue),
    rgb(134, 31, 98),
    rgb(95, 174, 230),
    rgb(15, 97, 15)
  );
  background-size: 400% 400%;
  animation: gradient 15s ease infinite, animate-to-up 1s ease backwards;
}

/* Profile Image, Name and Position */

.card__profile {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.card__profile-image {
  position: relative;
  border-radius: 50%;
  width: 2rem;
  height: 2rem;
  aspect-ratio: 1/1;

  outline: 2px solid var(--color-neutral-light-gray-300);
}

.card__profile-figure--name {
  line-height: 1.1;
  color: var(--color-neutral-light-gray-200);
  font-weight: 500;
}

.card__profile-figure--title {
  color: var(--color-neutral-light-gray-300);
}

.card__title {
  line-height: 1.1;
  z-index: 2;
}

.card__paragraph {
  color: var(--color-neutral-light-gray-300);
  position: relative;
}

.card__paragraph::before {
  content: "\201C";
  position: absolute;
  left: -0.8rem;
  font-size: 2rem;
  line-height: 1;
  font-family: sans-serif;
  opacity: 0.5;
  /* border: 1px solid red; */
}

.card__paragraph::after {
  position: absolute;
  content: "\201D";
  font-size: 2rem;
  line-height: 1;
  font-family: sans-serif;
  opacity: 0.5;
  /* border: 1px solid red; */
}

.card-1::after {
  position: absolute;
  content: "\201D";
  font-size: 28rem;
  line-height: 1;
  font-family: sans-serif;
  top: -3.5rem;
  right: 1rem;
  opacity: 0.3;
  z-index: -1;
  /* border: 1px solid red; */
}

/* UTILITIES / HELPER CLASSES */
.outline-primary {
  outline: 2px solid var(--color-primary-purple);
}

.bg-purple {
  background-color: var(--color-primary-purple);
}
.bg-gray {
  background-color: var(--color-primary-light-gray-500);
}

.text-clr-dark {
  color: var(--color-primary-blue);
}
.text-clr-gray-dark {
  color: var(--color-primary-light-gray-500);
}

.color-gradient-primary {
  background-image: linear-gradient(
    45deg,
    var(--color-primary-purple),
    var(--color-primary-blue)
  );

  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
}

.blur {
  filter: blur(0.1rem);
}

/* ANCHORS / LINK */

a:link,
a:visited {
  color: var(--color-neutral-light-gray-200);
  padding-bottom: 0.2rem;
  text-decoration: none;
  border-bottom: 0.1rem solid transparent;
}

a:hover,
a:active {
  border-bottom: 0.1rem solid currentColor;
}

/* ANIMATION */

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes animate-to-right {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes animate-to-bottom {
  0% {
    opacity: 0;
    transform: translateY(-10rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes animate-to-up {
  0% {
    opacity: 0;
    transform: translateY(10rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* MEDIA QUERIES FOR RESPONSIVENESS */

@media only screen and (max-width: 56.25em) {
  .container {
    margin: 1rem;
    grid-template-columns: repeat(4, [col-start] 1fr [col-end]);
    grid-template-rows: repeat(4, [row-start] min-content [row-end]);
  }

  .card-1 {
    grid-column: col-start 1 / col-end 2;
  }
  .card-2 {
    grid-column: col-start 1 / col-end 4;
    grid-row: row-start 2 / row-end 2;
  }
  .card-3 {
    grid-column: col-start 3 / col-end 4;
    grid-row: row-start 3 / row-end 3;
  }
  .card-4 {
    grid-column: col-start 1 / col-end 2;
    grid-row: row-start 3 / row-end 3;
  }
  .card-5 {
    grid-column: col-start 3 / col-end 4;
    grid-row: row-start 1;
  }
  .attribution {
    grid-column: col-start 1 / col-end 4;
  }
}

@media only screen and (max-width: 36em) {
  .container {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(auto-fit, minmax(max-content, 1fr));
  }

  .card-1 {
    grid-column: 1 / -1;
    grid-row: 1 / span 1;
  }
  .card-2 {
    grid-column: 1 / -1;
    grid-row: 2 / span 1;
  }
  .card-3 {
    grid-column: 1 / -1;
    grid-row: 4 / span 1;
  }
  .card-4 {
    grid-column: 1 / -1;
    grid-row: 3 / span 1;
  }
  .card-5 {
    grid-column: 1 / -1;
    grid-row: 5 / span 1;
  }
  .attribution {
    grid-column: 1 / -1;
    grid-row: 6 / span 1;
  }
}
